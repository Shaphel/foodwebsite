# Generated by Django 3.0.5 on 2020-05-25 11:27

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_vendor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=20)),
                ('lastname', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('amountOutstanding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=65)),
                ('dateTimeCreated', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodname', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=65)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('status', models.CharField(choices=[('Available', 'AVAILABLE'), ('Sold Out', 'SOLD OUT')], default='AVAILABLE', max_length=30)),
                ('dateTimeCreated', models.DateTimeField(auto_now_add=True)),
                ('isRecurring', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=5)),
                ('frequencyofRecurrence', models.CharField(choices=[('B1', 'Breakfast, Mon'), ('B2', 'Breakfast, Mon-Tue'), ('B3', 'Breakfast, Mon-Wed'), ('B4', 'Breakfast, Mon-Thur'), ('B5', 'Breakfast, Mon-Fri'), ('L1', 'Lunch, Mon'), ('L2', 'Lunch, Mon-Tue'), ('L3', 'Lunch, Mon-Wed'), ('L4', 'Lunch, Mon-Thur'), ('L5', 'Lunch, Mon-Fri'), ('ONCE', 'ONCE')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=200)),
                ('amountDue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=65)),
                ('amountPaid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=65)),
                ('amountOutstanding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=65)),
                ('status', models.CharField(choices=[(1, 'COOKING'), (2, 'READY'), (3, 'ON THE WAY'), (4, 'CANCELLED')], max_length=50)),
                ('dateTimeOfOrder', models.DateTimeField(auto_now_add=True)),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signup.Customer')),
                ('itemsOrdered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Menu.foodname+', to='signup.Menu')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=100)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('dateTimeCreated', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=0)),
                ('sub_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=65)),
                ('menuId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signup.Menu')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_details', to='signup.Order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='vendorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signup.Vendor'),
        ),
        migrations.AddField(
            model_name='menu',
            name='vendorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signup.Vendor'),
        ),
    ]
